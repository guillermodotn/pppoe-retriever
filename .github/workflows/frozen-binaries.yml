name: Build frozen binaries

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          if [[ "${{ matrix.os }}" == 'windows-latest' ]]; then
            pyinstaller --onefile --name pppoe-retriever-windows.exe --distpath ./dist pppoe-retriever.py
          elif [[ "${{ matrix.os }}" == 'ubuntu-latest' ]]; then
            pyinstaller --onefile --name pppoe-retriever-ubuntu --distpath ./dist pppoe-retriever.py
          elif [[ "${{ matrix.os }}" == 'macos-latest' ]]; then
            pyinstaller --onefile --name pppoe-retriever-macos --distpath ./dist pppoe-retriever.py
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frozen-binaries-${{matrix.os}}
          path: dist/
